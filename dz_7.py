import numpy as np
from numpy import mean, std, array

""""
1.Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного скоринга (
ks): zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110], ks = [401, 574, 874, 919, 459, 739, 653, 902, 746,
832]. Используя математические операции, посчитать коэффициенты линейной регрессии, приняв за X заработную плату (то
есть, zp - признак), а за y - значения скорингового балла (то есть, ks - целевая переменная). Произвести расчет как с
использованием intercept, так и без.
"""

zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110]
ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832]
X = np.array(zp)
y = np.array(ks)

zp_mean = np.mean(zp)

ks_mean = np.mean(ks)
zp_std = np.std(zp)
ks_std = np.std(zp)
n = len(zp)
""" С Интерсептом """

# (np.mean(X*y) - np.mean(X)*np.mean(y)) / (np.mean(X**2) - np.mean(X)**2) = 2.620538882402765
b = (n * (np.sum(X*y)) - (np.sum(X) * np.sum(y))) / (n*(np.sum(X**2)) - np.sum(X)**2)
print(b)
# 2.6205388824027653
a = np.mean(y) - b*np.mean(X)
# 444.1773

""" Без интерсепта """

X = X.reshape((n, 1))
y = y.reshape((n, 1))

B = np.dot(np.linalg.inv(np.dot(X.T, X)), X.T@y)
#[[5.88982042]]

""""
2.Посчитать коэффициент линейной регрессии при заработной плате (zp), используя градиентный спуск (без intercept).
"""
X = np.array(zp)
y = np.array(ks)

B1 = 0.1
mse = np.sum((B1*X - y)**2)/n

def mse_(B1, y=y, X=X, n = 10):
    return np.sum((B1*X - y)**2)/n

# derivative
mse_p = 2/n * np.sum((B1*X - y)*X)


alpha = 1e-6
for i in range(10**4):
    B1 -= alpha * 2/n * np.sum((B1*X - y)*X)
    mse = mse_(B1)
    if i % 10**3 == 0:
        print(f"i={i}, B1= {B1}, mse= {mse}")

# i=0, B1= 0.2i=0, B1= 0.25952808, mse= 493237.7212546963
# i=1000, B1= 5.8898204201285544, mse= 56516.85841571941
# i=2000, B1= 5.889820420132673, mse= 56516.85841571943
# i=3000, B1= 5.889820420132673, mse= 56516.85841571943
# i=4000, B1= 5.889820420132673, mse= 56516.85841571943
# i=5000, B1= 5.889820420132673, mse= 56516.85841571943
# i=6000, B1= 5.889820420132673, mse= 56516.85841571943
# i=7000, B1= 5.889820420132673, mse= 56516.85841571943
# i=8000, B1= 5.889820420132673, mse= 56516.85841571943
# i=9000, B1= 5.889820420132673, mse= 56516.85841571943

"""
3.В каких случаях для вычисления доверительных интервалов и проверки статистических гипотез используется таблица 
значений функции Лапласа, а в каких - таблица критических точек распределения Стьюдента? 
"""

# В случае если объем выборки слишком большой (>100), используют таблицу Стьюдента, а если меньше то Лапласа?

